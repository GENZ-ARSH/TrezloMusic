from VenomMusic.core.bot import Venom
from VenomMusic.core.dir import dirr
from VenomMusic.core.git import git
from VenomMusic.core.userbot import Userbot
from VenomMusic.misc import dbb, heroku

from .logging import LOGGER

LOGGER(__name__).info("üî• Starting TrezloMusicBot initialization...")

# Safe startup modules
try:
    dirr()
    LOGGER(__name__).info("‚úÖ dirr() initialized")
except Exception as e:
    LOGGER(__name__).warning(f"‚ö†Ô∏è dirr() failed: {e}")

try:
    git()
    LOGGER(__name__).info("‚úÖ git() executed")
except Exception as e:
    LOGGER(__name__).warning(f"‚ö†Ô∏è git() failed: {e}")

try:
    dbb()
    LOGGER(__name__).info("‚úÖ dbb() initialized")
except Exception as e:
    LOGGER(__name__).warning(f"‚ö†Ô∏è dbb() failed: {e}")

try:
    heroku()
    LOGGER(__name__).info("‚úÖ heroku() initialized")
except Exception as e:
    LOGGER(__name__).warning(f"‚ö†Ô∏è heroku() failed: {e}")


# Core bots
try:
    app = Venom()
    LOGGER(__name__).info("‚úÖ Venom bot initialized")
except Exception as e:
    LOGGER(__name__).error(f"‚ùå Venom init failed: {e}")

try:
    userbot = Userbot()
    LOGGER(__name__).info("‚úÖ Userbot initialized")
except Exception as e:
    LOGGER(__name__).error(f"‚ùå Userbot init failed: {e}")


# Platform APIs
from .platforms import *

try:
    Apple = AppleAPI()
    Carbon = CarbonAPI()
    SoundCloud = SoundAPI()
    Spotify = SpotifyAPI()
    Resso = RessoAPI()
    Telegram = TeleAPI()
    YouTube = YouTubeAPI()
    LOGGER(__name__).info("‚úÖ All platform APIs initialized")
except Exception as e:
    LOGGER(__name__).error(f"‚ùå Platform API init failed: {e}")
